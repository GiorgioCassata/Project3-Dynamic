int p[n][n];
for (int i = 0; i<n; i++){	//generates half an n x n matrix of possible values.
	for (int j = i; j<n; j++){
		p[i][j] = min(x[j], s[j-i]);
		sum[i] += p[i][j];
	}
}


bool decision[n]; //1 means reboot on given day, 0 means don't reboot 
decision[n-1] = 0; //never worth rebooting on the last day
int lastReboot = n;


//for every day, decide wheter or not to reboot the day before or not.
for(int j = n-1; i>0; i--){ 	
	if (sum(p[j], j, lastReboot) < sum(p[j-1], j-1, lastReboot)){ 	//where sum(*a,b,c) returns the sum of elements from index b to c in array a.
		decision[j-1] = 0;
	} else {
		decision[j-1] = 1;
}
